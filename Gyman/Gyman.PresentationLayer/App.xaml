<Application x:Class="Gyman.PresentationLayer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:v="clr-namespace:Gyman.PresentationLayer.Views"
             xmlns:vm="clr-namespace:Gyman.PresentationLayer.ViewModels">
    <Application.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- Member Detail View Template -->
        <DataTemplate DataType="{x:Type vm:MemberDetailViewModel}">
            <v:MemberDetailView/>
        </DataTemplate>

        <!-- Trainer Detail View Template -->
        <DataTemplate DataType="{x:Type vm:TrainerDetailViewModel}">
            <v:TrainerDetailView/>
        </DataTemplate>

        <!-- TextBox Error Style -->
        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <AdornedElementPlaceholder x:Name="Placeholder"/>
                            <TextBlock FontSize="12"
                                       Foreground="Red"
                                       Text="{Binding ElementName=Placeholder,
                                Path=AdornedElement.(Validation.Errors)/ErrorContent}"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="Background" Value="Red"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Navigation Item Template -->
        <DataTemplate x:Key="NavigationItemTemplate">
            <Button Content="{Binding DisplayMember}"
                    Command="{Binding OpenDetailViewCommand}">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="FontWeight" Value="Normal"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </DataTemplate>

        <!-- Navigation Item Container Style -->
        <Style x:Key="NavigationItemContainerStyle" TargetType="ContentPresenter">
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <!-- Detail View Item Template -->
        <DataTemplate x:Key="DetailViewItemTemplate">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Title}"/>
                <TextBlock Text="*"
                           Visibility="{Binding HasChanges,
                    Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <Button Content="x"
                        VerticalContentAlignment="Top"
                        Command="{Binding CloseDetailViewCommand}"/>
            </StackPanel>
        </DataTemplate>
    </Application.Resources>
</Application>
